<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.baison.e3plus.basebiz.order.service.dao.mapper.rds.OrderDistributeLogMapper" >
  <resultMap id="BaseResultMap" type="com.baison.e3plus.basebiz.order.api.model.calculate.OrderDistributeLog" >
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="ORDERBILLNO" property="orderbillno" jdbcType="VARCHAR" />
    <result column="ISSUCCESS" property="issuccess" jdbcType="VARCHAR" />
    <result column="CREATEBY" property="createby" jdbcType="VARCHAR" />
    <result column="CREATEDATE" property="createdate" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="TINYINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.baison.e3plus.basebiz.order.api.model.calculate.OrderDistributeLogWithBLOBs" extends="BaseResultMap" >
    <result column="PROCESSES" property="processes" jdbcType="LONGVARCHAR" />
    <result column="RESPONSE" property="response" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, ORDERBILLNO, ISSUCCESS, CREATEBY, CREATEDATE, status
  </sql>
  <sql id="Blob_Column_List" >
    PROCESSES, RESPONSE
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.baison.e3plus.basebiz.order.service.dao.model.example.OrderDistributeLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ord_orderdistributelog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.baison.e3plus.basebiz.order.service.dao.model.example.OrderDistributeLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from ord_orderdistributelog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ord_orderdistributelog
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from ord_orderdistributelog
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.baison.e3plus.basebiz.order.api.model.calculate.OrderDistributeLogWithBLOBs" >
    insert into ord_orderdistributelog (ID, ORDERBILLNO, ISSUCCESS, 
      CREATEBY, CREATEDATE, status, 
      PROCESSES, RESPONSE)
    values (#{id,jdbcType=BIGINT}, #{orderbillno,jdbcType=VARCHAR}, #{issuccess,jdbcType=VARCHAR}, 
      #{createby,jdbcType=VARCHAR}, #{createdate,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}, 
      #{processes,jdbcType=LONGVARCHAR}, #{response,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.baison.e3plus.basebiz.order.api.model.calculate.OrderDistributeLogWithBLOBs" >
    insert into ord_orderdistributelog
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="orderbillno != null" >
        ORDERBILLNO,
      </if>
      <if test="issuccess != null" >
        ISSUCCESS,
      </if>
      <if test="createby != null" >
        CREATEBY,
      </if>
      <if test="createdate != null" >
        CREATEDATE,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="processes != null" >
        PROCESSES,
      </if>
      <if test="response != null" >
        RESPONSE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderbillno != null" >
        #{orderbillno,jdbcType=VARCHAR},
      </if>
      <if test="issuccess != null" >
        #{issuccess,jdbcType=VARCHAR},
      </if>
      <if test="createby != null" >
        #{createby,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="processes != null" >
        #{processes,jdbcType=LONGVARCHAR},
      </if>
      <if test="response != null" >
        #{response,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.baison.e3plus.basebiz.order.api.model.calculate.OrderDistributeLog" >
    update ord_orderdistributelog
    <set >
      <if test="issuccess != null" >
        ISSUCCESS = #{issuccess,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.baison.e3plus.basebiz.order.api.model.calculate.OrderDistributeLogWithBLOBs" >
    update ord_orderdistributelog
    set ISSUCCESS = #{issuccess,jdbcType=VARCHAR},
      CREATEBY = #{createby,jdbcType=VARCHAR},
      CREATEDATE = #{createdate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT},
      PROCESSES = #{processes,jdbcType=LONGVARCHAR},
      RESPONSE = #{response,jdbcType=LONGVARCHAR}
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.baison.e3plus.basebiz.order.api.model.calculate.OrderDistributeLog" >
    update ord_orderdistributelog
    set ORDERBILLNO = #{orderbillno,jdbcType=VARCHAR},
      ISSUCCESS = #{issuccess,jdbcType=VARCHAR},
      CREATEBY = #{createby,jdbcType=VARCHAR},
      CREATEDATE = #{createdate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>