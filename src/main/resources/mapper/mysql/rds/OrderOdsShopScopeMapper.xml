<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.baison.e3plus.basebiz.order.service.dao.mapper.rds.OrderOdsShopScopeMapper">
    <resultMap id="BaseResultMap" type="com.baison.e3plus.basebiz.order.api.model.OrderOdsShopScope">
        <id column="shop_scope_id" property="shopScopeId" jdbcType="BIGINT"/>
        <result column="order_distribute_strategy_id" property="orderDistributeStrategyId" jdbcType="BIGINT"/>
        <result column="scope_type" property="scopeType" jdbcType="TINYINT"/>
        <result column="scope_condition" property="scopeCondition" jdbcType="VARCHAR"/>
        <result column="scope_desc" property="scopeDesc" jdbcType="VARCHAR"/>
        <collection property="shopDetails" ofType="com.baison.e3plus.basebiz.order.api.model.OrderOdsShopScopeDetail"
                    select="getShopScopeDetails"
                    column="shop_scope_id"/>
    </resultMap>
    <select id="getShopScopeDetails" parameterType="java.lang.Long"
            resultType="com.baison.e3plus.basebiz.order.api.model.OrderOdsShopScopeDetail">
		select
			d.shop_detail_id,
			d.order_distribute_strategy_id,
			d.shop_scope_id,
			d.shop_id,
			d.shop_code
		from ord_ods_shop_detail d
		where d.shop_scope_id = #{shopScopeId,jdbcType=BIGINT}
	</select>
    <sql id="Base_Column_List">
    shop_scope_id, order_distribute_strategy_id, scope_type, scope_condition, scope_desc
  </sql>
    <select id="selectByOdsId" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from ord_ods_shop_scope
        where order_distribute_strategy_id = #{orderDistributeStrategyId,jdbcType=BIGINT}
    </select>
    <select id="selectByOdsIdBatch" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from ord_ods_shop_scope
        where order_distribute_strategy_id in
        <foreach collection="array" item="id" separator="," open="(" close=")">
            #{id,jdbcType=BIGINT}
        </foreach>
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ord_ods_shop_scope
    where shop_scope_id = #{shopScopeId,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByOdsIdBatch" parameterType="java.lang.Long">
        delete from ord_ods_shop_scope
        where order_distribute_strategy_id in
        <foreach collection="array" open="(" close=")" separator="," item="id">
            #{id,jdbcType=BIGINT}
        </foreach>
    </delete>
    <delete id="deleteDetailByOdsIdBatch" parameterType="java.lang.Long">
        delete from ord_ods_shop_detail
        where order_distribute_strategy_id in
        <foreach collection="array" open="(" close=")" separator="," item="id">
            #{id,jdbcType=BIGINT}
        </foreach>
    </delete>
    <insert id="insert" parameterType="com.baison.e3plus.basebiz.order.api.model.OrderOdsShopScope">
    insert into ord_ods_shop_scope (shop_scope_id, order_distribute_strategy_id, 
      scope_type, scope_condition, scope_desc
      )
    values (#{shopScopeId,jdbcType=BIGINT}, #{orderDistributeStrategyId,jdbcType=BIGINT}, 
      #{scopeType,jdbcType=TINYINT}, #{scopeCondition,jdbcType=VARCHAR}, #{scopeDesc,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertBatch" parameterType="com.baison.e3plus.basebiz.order.api.model.OrderOdsShopScope">
        insert into ord_ods_shop_scope (shop_scope_id, order_distribute_strategy_id,
        scope_type, scope_condition, scope_desc
        )
        values
        <foreach collection="list" separator="," item="item">
            (#{item.shopScopeId,jdbcType=BIGINT}, #{item.orderDistributeStrategyId,jdbcType=BIGINT},
            #{item.scopeType,jdbcType=TINYINT}, #{item.scopeCondition,jdbcType=VARCHAR},
            #{item.scopeDesc,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>
    <insert id="insertDetailBatch" parameterType="com.baison.e3plus.basebiz.order.api.model.OrderOdsShopScopeDetail">
        insert into ord_ods_shop_detail (shop_detail_id, order_distribute_strategy_id,
        shop_scope_id,shop_id,shop_code
        )
        values
        <foreach collection="list" separator="," item="item">
            (#{item.shopDetailId,jdbcType=BIGINT}, #{item.orderDistributeStrategyId,jdbcType=BIGINT},
            #{item.shopScopeId,jdbcType=BIGINT}, #{item.shopId,jdbcType=BIGINT}, #{item.shopCode,jdbcType=VARCHAR})
        </foreach>
    </insert>
    <insert id="insertSelective" parameterType="com.baison.e3plus.basebiz.order.api.model.OrderOdsShopScope">
        insert into ord_ods_shop_scope
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="shopScopeId != null">
                shop_scope_id,
            </if>
            <if test="orderDistributeStrategyId != null">
                order_distribute_strategy_id,
            </if>
            <if test="scopeType != null">
                scope_type,
            </if>
            <if test="scopeCondition != null">
                scope_condition,
            </if>
            <if test="scopeDesc != null">
                scope_desc,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="shopScopeId != null">
                #{shopScopeId,jdbcType=BIGINT},
            </if>
            <if test="orderDistributeStrategyId != null">
                #{orderDistributeStrategyId,jdbcType=BIGINT},
            </if>
            <if test="scopeType != null">
                #{scopeType,jdbcType=TINYINT},
            </if>
            <if test="scopeCondition != null">
                #{scopeCondition,jdbcType=VARCHAR},
            </if>
            <if test="scopeDesc != null">
                #{scopeDesc,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.baison.e3plus.basebiz.order.api.model.OrderOdsShopScope">
        update ord_ods_shop_scope
        <set>
            <if test="orderDistributeStrategyId != null">
                order_distribute_strategy_id = #{orderDistributeStrategyId,jdbcType=BIGINT},
            </if>
            <if test="scopeType != null">
                scope_type = #{scopeType,jdbcType=TINYINT},
            </if>
            <if test="scopeCondition != null">
                scope_condition = #{scopeCondition,jdbcType=VARCHAR},
            </if>
            <if test="scopeDesc != null">
                scope_desc = #{scopeDesc,jdbcType=VARCHAR},
            </if>
        </set>
        where shop_scope_id = #{shopScopeId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.baison.e3plus.basebiz.order.api.model.OrderOdsShopScope">
    update ord_ods_shop_scope
    set order_distribute_strategy_id = #{orderDistributeStrategyId,jdbcType=BIGINT},
      scope_type = #{scopeType,jdbcType=TINYINT},
      scope_condition = #{scopeCondition,jdbcType=VARCHAR},
      scope_desc = #{scopeDesc,jdbcType=VARCHAR}
    where shop_scope_id = #{shopScopeId,jdbcType=BIGINT}
  </update>
</mapper>